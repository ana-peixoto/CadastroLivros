// <auto-generated />
using CadastroLivros.Api.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CadastroLivros.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241005000726_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AssuntoLivro", b =>
                {
                    b.Property<int>("AssuntoscodAs")
                        .HasColumnType("int");

                    b.Property<int>("LivrosCodl")
                        .HasColumnType("int");

                    b.HasKey("AssuntoscodAs", "LivrosCodl");

                    b.HasIndex("LivrosCodl");

                    b.ToTable("AssuntoLivro");
                });

            modelBuilder.Entity("AutorLivro", b =>
                {
                    b.Property<int>("AutoresCodAu")
                        .HasColumnType("int");

                    b.Property<int>("LivrosCodl")
                        .HasColumnType("int");

                    b.HasKey("AutoresCodAu", "LivrosCodl");

                    b.HasIndex("LivrosCodl");

                    b.ToTable("AutorLivro");
                });

            modelBuilder.Entity("CadastroLivros.Api.Models.Assunto", b =>
                {
                    b.Property<int>("codAs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("codAs"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("codAs");

                    b.ToTable("Assuntos");
                });

            modelBuilder.Entity("CadastroLivros.Api.Models.Autor", b =>
                {
                    b.Property<int>("CodAu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CodAu"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CodAu");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("CadastroLivros.Api.Models.Livro", b =>
                {
                    b.Property<int>("Codl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Codl"));

                    b.Property<string>("AnoPublicacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Edicao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Codl");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("AssuntoLivro", b =>
                {
                    b.HasOne("CadastroLivros.Api.Models.Assunto", null)
                        .WithMany()
                        .HasForeignKey("AssuntoscodAs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CadastroLivros.Api.Models.Livro", null)
                        .WithMany()
                        .HasForeignKey("LivrosCodl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AutorLivro", b =>
                {
                    b.HasOne("CadastroLivros.Api.Models.Autor", null)
                        .WithMany()
                        .HasForeignKey("AutoresCodAu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CadastroLivros.Api.Models.Livro", null)
                        .WithMany()
                        .HasForeignKey("LivrosCodl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
